spring:
    datasource:
        url: jdbc:mysql://localhost:3306/Liv_DB?useTimezone=true&serverTimezone=America/Sao_Paulo
        username: root
        password: Rr-15062001
        driverClassName: com.mysql.cj.jdbc.Driver
    jpa:
        show-sql: true
        hibernate:
            ddl-auto: validate
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
            naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL8Dialect
    security:
        oauth2:
            client:
                registration:
                    google:
                        client-id: ${CLIENT_ID}
                        client-secret: ${CLIENT_SECRET}
                        redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - email
                            - profile
cors:
    enabled: true
    allowed-headers: "*"
    allowed-methods: GET, POST, PUT, DELETE, OPTIONS, PATCH
    allowed-origins: "*"
    exposed-headers: Content-Disposition, Content-Length, Content-Type
app:
    imagesPath: C:\\Users\\Rafael\\virtual-lib\\ImagensLivros
    oauth2:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
            - http://localhost:3000/oauth2/redirect
            - myandroidapp://oauth2/redirect
            - myiosapp://oauth2/redirect
    auth:
        tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
        tokenExpirationMsec: 864000000
